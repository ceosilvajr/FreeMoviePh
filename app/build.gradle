apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion rootProject.ext.compile_sdk
  buildToolsVersion rootProject.ext.build_tooks_version
  defaultConfig {
    applicationId rootProject.ext.application_id
    minSdkVersion rootProject.ext.min_sdk_supported
    targetSdkVersion rootProject.ext.target_sdk_supported
    versionCode rootProject.ext.version_code
    versionName rootProject.ext.version_number
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    buildConfigField "String", "BASE_URL", '"https://api.themoviedb.org/3/"'
    buildConfigField "String", "API_KEY", '"d75111afb3b687c1b99cb5bdf5fdb98a"'
    buildConfigField "String", "IMAGE_BASE_URL", '"https://image.tmdb.org/t/p/w500"'
  }
  buildTypes {
    debug {
      versionNameSuffix "debug"
      minifyEnabled false
      shrinkResources false
    }
    release {
      versionNameSuffix "release"
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    applicationVariants.all { variant ->
      variant.outputs.each { output ->
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.apk')) {
          def date = new Date().format("ddMMyy_hhmmss", TimeZone.getTimeZone("Asia/Manila"))
          def fileName = "FMP_${buildType.versionNameSuffix}" + "_v${defaultConfig.versionName}" + "_${date}" + ".apk"
          output.outputFileName = fileName
          println "$outputFile.parent/$fileName"
        }
      }
    }
  }
  compileOptions {
    sourceCompatibility 1.8
    targetCompatibility 1.8
  }
  packagingOptions {
    exclude 'about_files/LICENSE-2.0.txt'
    exclude 'plugin.properties'
    exclude 'plugin.xml'
    exclude 'LICENSE.txt'
    exclude 'META-INF/eclipse.inf'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/plexus/components.xml'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }
  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation "org.jetbrains.anko:anko-commons:$anko"

  implementation 'com.android.support:appcompat-v7:28.0.0'
  implementation 'com.android.support.constraint:constraint-layout:1.1.3'

  implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin"
  implementation "io.reactivex.rxjava2:rxandroid:$rx_android"

  implementation "com.squareup.retrofit2:retrofit:$retrofit"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit"
  implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3"

  implementation 'com.android.support:design:28.0.0'
  implementation "com.github.bumptech.glide:glide:4.8.0"
  debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
  releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
